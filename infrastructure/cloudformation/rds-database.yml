AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS PostgreSQL Database for Banana Pajama Zombie Shooter'

Parameters:
  ProjectName:
    Type: String
    Default: banana-pajama
    Description: Name of the project
  
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
    Description: Environment name

  DatabaseName:
    Type: String
    Default: banana_pajama
    Description: PostgreSQL database name

  DatabaseUsername:
    Type: String
    Default: postgres
    Description: PostgreSQL master username

  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    Description: PostgreSQL master password (8-41 characters)

  DatabaseInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
    Description: RDS instance class (db.t3.micro is free tier eligible)

  AllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 100
    Description: Allocated storage in GB (20GB is free tier eligible)

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub "${ProjectName}-${Environment}-db-subnet-group"
      DBSubnetGroupDescription: Subnet group for RDS database
      SubnetIds:
        - Fn::ImportValue: !Sub "${ProjectName}-${Environment}-private-subnet-1"
        - Fn::ImportValue: !Sub "${ProjectName}-${Environment}-private-subnet-2"
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-db-subnet-group"
        - Key: Environment
          Value: !Ref Environment

  # DB Parameter Group
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: postgres15
      Description: Parameter group for PostgreSQL 15
      Parameters:
        shared_preload_libraries: pg_stat_statements
        log_statement: all
        log_min_duration_statement: 1000
        max_connections: 100
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-db-params"
        - Key: Environment
          Value: !Ref Environment

  # RDS Instance
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub "${ProjectName}-${Environment}-db"
      DBName: !Ref DatabaseName
      Engine: postgres
      EngineVersion: '15.13'
      DBInstanceClass: !Ref DatabaseInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      
      # Credentials
      MasterUsername: !Ref DatabaseUsername
      MasterUserPassword: !Ref DatabasePassword
      
      # Network & Security
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub "${ProjectName}-${Environment}-rds-sg-id"
      PubliclyAccessible: false
      
      # Parameter Group
      DBParameterGroupName: !Ref DBParameterGroup
      
      # Backup & Maintenance
      BackupRetentionPeriod: 7
      PreferredBackupWindow: "03:00-04:00"
      PreferredMaintenanceWindow: "sun:04:00-sun:05:00"
      
      # Monitoring
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt RDSEnhancedMonitoringRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      
      # Multi-AZ for production
      MultiAZ: !If [IsProduction, true, false]
      
      # Auto Minor Version Upgrade
      AutoMinorVersionUpgrade: false
      
      # Tags
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-db"
        - Key: Environment
          Value: !Ref Environment

  # Enhanced Monitoring Role
  RDSEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${Environment}-rds-monitoring-role"
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Alarms
  DatabaseCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ProjectName}-${Environment}-database-cpu-high"
      AlarmDescription: Database CPU utilization is over 80%
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DatabaseInstance
      TreatMissingData: notBreaching

  DatabaseConnectionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${ProjectName}-${Environment}-database-connections-high"
      AlarmDescription: Database connection count is over 80
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DatabaseInstance
      TreatMissingData: notBreaching

# Conditions
Conditions:
  IsProduction: !Equals [!Ref Environment, production]

Outputs:
  DatabaseEndpoint:
    Description: RDS PostgreSQL endpoint
    Value: !GetAtt DatabaseInstance.Endpoint.Address
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-endpoint"

  DatabasePort:
    Description: RDS PostgreSQL port
    Value: !GetAtt DatabaseInstance.Endpoint.Port
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-port"

  DatabaseName:
    Description: Database name
    Value: !Ref DatabaseName
    Export:
      Name: !Sub "${ProjectName}-${Environment}-db-name"