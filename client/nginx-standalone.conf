server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|mp3|ogg|wav)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # API endpoints return mock responses for standalone mode
    location = /api/highscores {
        if ($request_method = GET) {
            add_header Content-Type application/json;
            return 200 '[]';
        }
        if ($request_method = POST) {
            add_header Content-Type application/json;
            return 200 '{"success":true,"message":"Score saved locally","data":{"rank":1}}';
        }
        add_header Content-Type application/json;
        return 405 '{"error":"Method not allowed"}';
    }

    location /api/ {
        add_header Content-Type application/json;
        return 404 '{"error":"Backend not available in standalone mode"}';
    }

    # Serve main application
    location / {
        try_files $uri $uri/ /index.html;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}