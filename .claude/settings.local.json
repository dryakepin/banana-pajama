{
  "permissions": {
    "allow": [
      "Bash(docker-compose:*)",
      "Bash(docker-compose up:*)",
      "Bash(aws cloudformation:*)",
      "Bash(./scripts/build-images.sh:*)",
      "Bash(./scripts/push-images.sh:*)",
      "Bash(chmod:*)",
      "Bash(aws iam list-roles:*)",
      "Bash(aws ecs register-task-definition:*)",
      "Bash(aws ecs update-service:*)",
      "Bash(aws ecs wait services-stable:*)",
      "Bash(aws ecs describe-services:*)",
      "Bash(aws ecs list-tasks:*)",
      "Bash(aws ecs describe-tasks:*)",
      "Bash(aws logs create-log-group:*)",
      "Bash(aws logs describe-log-streams --log-group-name /ecs/banana-pajama-production-server --region us-east-1 --order-by LastEventTime --descending --max-items 1 --query 'logStreams[0].logStreamName' --output text)",
      "Bash(aws logs get-log-events:*)",
      "Bash(docker version:*)",
      "Bash(docker build:*)",
      "Bash(aws secretsmanager create-secret:*)",
      "Bash(aws secretsmanager update-secret:*)",
      "Bash(aws iam get-role-policy:*)",
      "Bash(aws iam put-role-policy:*)",
      "Bash(aws rds modify-db-instance:*)",
      "Bash(aws rds wait:*)",
      "Bash(aws ecs stop-task:*)",
      "Bash(aws elbv2 describe-target-health:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(docker image rm:*)",
      "Bash(grep:*)",
      "Bash(aws sts:*)",
      "Bash(./scripts/deploy-aws.sh:*)",
      "Bash(aws ecr describe-repositories:*)",
      "Bash(aws ecr create-repository:*)",
      "Bash(docker tag:*)",
      "Bash(docker push:*)",
      "Bash(aws ecr list-images:*)",
      "Bash(aws rds describe-db-instances:*)",
      "Bash(aws ecr describe-images:*)",
      "Bash(aws ecs list-clusters:*)",
      "Bash(aws ec2 describe-regions:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws iam create-role:*)",
      "Bash(aws ecs run-task:*)",
      "Bash(aws secretsmanager describe-secret:*)",
      "Bash(aws ec2 describe-security-groups:*)",
      "Bash(aws ec2 describe-subnets:*)",
      "Bash(aws ec2 describe-route-tables:*)",
      "Bash(aws ec2 describe-network-interfaces:*)",
      "Bash(aws ec2 authorize-security-group-ingress:*)",
      "Bash(aws secretsmanager get-secret-value:*)",
      "Bash(aws secretsmanager list-secrets:*)"
    ],
    "deny": []
  }
}